name: Publish tags
on: push

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
      - name: Configure poetry to use local environments
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Run build and twine
        run: |
          poetry install
          poetry build
          poetry run twine check dist/*
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: "builds"
          path: "dist/*"
          if-no-files-found: error
      - name: Check tag name if we're to publish
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: |
          if ! [[ "$(poetry version -s)" == "${GITHUB_REF##*/}" ]]; then
            echo "Tag does not match!"
            exit 1
          fi
  pypi-publish:
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/generate-systemd-timer
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    permissions:
      id-token: write
    steps:
      - name: "Download build artifacts"
        uses: actions/download-artifact@v4
        with:
          name: "builds"
          path: "dist/"
      - name: "Publish to pypi"
        uses: pypa/gh-action-pypi-publish@v1.8.11
